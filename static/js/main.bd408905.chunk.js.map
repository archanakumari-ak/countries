{"version":3,"sources":["components/Countries/Countries.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Countries","props","handleChange","event","value","setState","selected","population","number","parseInt","toLocaleString","state","countries","languages","currencies","getApi","bind","this","axios","get","then","response","data","console","log","Container","maxWidth","className","Autocomplete","id","options","getOptionLabel","option","name","onChange","disableClearable","renderInput","params","TextField","label","variant","src","flag","alt","capital","region","subregion","Component","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAoGeA,G,wDA1Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA2BRC,aAAe,SAACC,EAAOC,GACrB,EAAKC,SAAS,CAAEC,SAAUF,KA7BT,EAgCnBG,WAAa,SAACC,GAGZ,OAFYC,SAASD,GACLE,eAAe,UA/B/B,EAAKC,MAAQ,CACXC,UAAW,GACXN,SAAU,GACVO,UAAW,GACXC,WAAY,IAGd,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKd,aAAe,EAAKA,aAAac,KAAlB,gBAXH,E,gEAejBC,KAAKF,W,+BAGG,IAAD,OACPG,IAAMC,IAtBE,wCAsBOC,MAAK,SAACC,GACnB,IAAMT,EAAYS,EAASC,KAC3BC,QAAQC,IAAIZ,GAEZ,EAAKP,SAAS,CAAEO,cAChB,EAAKP,SAAS,CAAEC,SAAUM,EAAU,Y,+BAgBtC,IAAMC,EAAYI,KAAKN,MAAML,SAASO,UAKtC,OAJAU,QAAQC,IAAIX,GAKV,8BACE,eAACY,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,YAAnC,UACE,qBAAKA,UAAU,OAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,MACHC,QAASb,KAAKN,MAAMC,UACpBmB,eAAgB,SAACC,GAAD,OAAYA,EAAOC,MACnCC,SAAUjB,KAAKf,aACfiC,kBAAgB,EAChBC,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,iBACNC,QAAQ,mBAMhB,6BAAKvB,KAAKN,MAAML,SAAS2B,OACzB,sBAAKJ,GAAG,UAAR,UACE,qBAAKY,IAAKxB,KAAKN,MAAML,SAASoC,KAAMC,IAAI,SACxC,0CACW,+BAAO1B,KAAKN,MAAML,SAASsC,aAEtC,6CACc,+BAAO3B,KAAKV,WAAWU,KAAKN,MAAML,SAASC,iBAEzD,yCACU,+BAAOU,KAAKN,MAAML,SAASuC,YAErC,6CACc,+BAAO5B,KAAKN,MAAML,SAASwC,eAEzC,uD,GAjFYC,cCETC,G,MARA,WACX,OACI,qBAAKrB,UAAU,SAAf,SACI,+CCQGsB,MAVf,WACE,OACE,sBAAKtB,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bd408905.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./Countries.css\";\r\n\r\nconst url = \"https://restcountries.eu/rest/v2/all\";\r\n\r\nclass Countries extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      countries: [],\r\n      selected: [],\r\n      languages: [],\r\n      currencies: []\r\n    };\r\n\r\n    this.getApi = this.getApi.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  getApi() {\r\n    axios.get(url).then((response) => {\r\n      const countries = response.data;\r\n      console.log(countries);\r\n\r\n      this.setState({ countries });\r\n      this.setState({ selected: countries[104] });\r\n    });\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ selected: value });\r\n  };\r\n\r\n  population = (number) => {\r\n    const num = parseInt(number);\r\n    const str = num.toLocaleString(\"en-US\");\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n\r\n    const languages = this.state.selected.languages;\r\n    console.log(languages);\r\n    //const language = languages.map(item => item.name);\r\n    //console.log(language);\r\n\r\n    return (\r\n      <div>\r\n        <Container maxWidth='sm' className='container'>\r\n          <div className='auto'>\r\n            <Autocomplete\r\n              id='box'\r\n              options={this.state.countries}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={this.handleChange}\r\n              disableClearable\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label='Select Country'\r\n                  variant='outlined'\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          <h2>{this.state.selected.name}</h2>\r\n          <div id='details'>\r\n            <img src={this.state.selected.flag} alt='flag' />\r\n            <p>\r\n              Capital: <span>{this.state.selected.capital}</span>\r\n            </p>\r\n            <p>\r\n              Population: <span>{this.population(this.state.selected.population)}</span>\r\n            </p>\r\n            <p>\r\n              Region: <span>{this.state.selected.region}</span>\r\n            </p>\r\n            <p>\r\n              Sub-Region: <span>{this.state.selected.subregion}</span>\r\n            </p>\r\n            <p>\r\n              Languages: \r\n            </p>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countries;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Made By AK</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.css';\nimport Countries from './components/Countries/Countries';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Countries</h1>\n      <Countries/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}