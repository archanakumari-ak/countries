{"version":3,"sources":["components/Countries/Countries.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Countries","props","handleChange","event","value","setState","selected","population","number","parseInt","toLocaleString","state","countries","getApi","bind","this","axios","get","then","response","data","console","log","Container","maxWidth","className","Autocomplete","id","options","getOptionLabel","option","name","onChange","disableClearable","renderInput","params","TextField","label","variant","src","flag","alt","capital","region","subregion","demonym","Component","Footer","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVA4FeA,G,wDAlFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAwBRC,aAAe,SAACC,EAAOC,GACrB,EAAKC,SAAS,CAAEC,SAAUF,KA1BT,EA6BnBG,WAAa,SAACC,GAGZ,OAFYC,SAASD,GACLE,eAAe,UA5B/B,EAAKC,MAAQ,CACXC,UAAW,GACXN,SAAU,IAGZ,EAAKO,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKZ,aAAe,EAAKA,aAAaY,KAAlB,gBATH,E,gEAajBC,KAAKF,W,+BAGG,IAAD,OACPG,IAAMC,IApBE,wCAoBOC,MAAK,SAACC,GACnB,IAAMP,EAAYO,EAASC,KAC3BC,QAAQC,IAAIV,GACZ,EAAKP,SAAS,CAAEO,cAChB,EAAKP,SAAS,CAAEC,SAAUM,EAAU,Y,+BAetC,OACE,8BACE,eAACW,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,YAAnC,UACE,qBAAKA,UAAU,OAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,MACHC,QAASb,KAAKJ,MAAMC,UACpBiB,eAAgB,SAACC,GAAD,OAAYA,EAAOC,MACnCC,SAAUjB,KAAKb,aACf+B,kBAAgB,EAChBC,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,iBACNC,QAAQ,mBAMhB,6BAAKvB,KAAKJ,MAAML,SAASyB,OACzB,sBAAKJ,GAAG,UAAR,UACE,qBAAKY,IAAKxB,KAAKJ,MAAML,SAASkC,KAAMC,IAAI,SACxC,0CACW,+BAAO1B,KAAKJ,MAAML,SAASoC,aAEtC,4CACc,IACZ,+BAAO3B,KAAKR,WAAWQ,KAAKJ,MAAML,SAASC,iBAE7C,yCACU,+BAAOQ,KAAKJ,MAAML,SAASqC,YAErC,6CACc,+BAAO5B,KAAKJ,MAAML,SAASsC,eAEzC,0CACW,+BAAO7B,KAAKJ,MAAML,SAASuC,yB,GA1E1BC,cCITC,G,MAVA,WACb,OACE,qBAAKtB,UAAU,SAAf,SACE,sCACI,mBAAGuB,KAAK,sCAAR,uBCOKC,MAVf,WACE,OACE,sBAAKxB,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.16d1d9f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./Countries.css\";\r\n\r\nconst url = \"https://restcountries.eu/rest/v2/all\";\r\n\r\nclass Countries extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      countries: [],\r\n      selected: [],\r\n    };\r\n\r\n    this.getApi = this.getApi.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  getApi() {\r\n    axios.get(url).then((response) => {\r\n      const countries = response.data;\r\n      console.log(countries);\r\n      this.setState({ countries });\r\n      this.setState({ selected: countries[104] });\r\n    });\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ selected: value });\r\n  };\r\n\r\n  population = (number) => {\r\n    const num = parseInt(number);\r\n    const str = num.toLocaleString(\"en-US\");\r\n    return str;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container maxWidth='sm' className='container'>\r\n          <div className='auto'>\r\n            <Autocomplete\r\n              id='box'\r\n              options={this.state.countries}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={this.handleChange}\r\n              disableClearable\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label='Select Country'\r\n                  variant='outlined'\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          <h2>{this.state.selected.name}</h2>\r\n          <div id='details'>\r\n            <img src={this.state.selected.flag} alt='flag' />\r\n            <p>\r\n              Capital: <span>{this.state.selected.capital}</span>\r\n            </p>\r\n            <p>\r\n              Population:{\" \"}\r\n              <span>{this.population(this.state.selected.population)}</span>\r\n            </p>\r\n            <p>\r\n              Region: <span>{this.state.selected.region}</span>\r\n            </p>\r\n            <p>\r\n              Sub-Region: <span>{this.state.selected.subregion}</span>\r\n            </p>\r\n            <p>\r\n              Demonym: <span>{this.state.selected.demonym}</span>\r\n            </p>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countries;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer'>\r\n      <p>\r\n        Â© <a href='https://github.com/archanakumari-ak'>AK</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\r\nimport Countries from \"./components/Countries/Countries\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <h1>Countries</h1>\r\n      <Countries />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}